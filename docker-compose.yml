# version: "3.9" # obsoleted for docker compose version 2

services:
  db_app:
    build:
       context: .
       dockerfile: Dockerfile.postgres
       args:
          DB_USER: ${DB_USER}
          DB_NAME: ${DB_NAME}
          DB_HOST: ${DB_HOST}
          DB_EXTERNAL_PORT: ${DB_EXTERNAL_PORT}
          DB_CONTAINER_VOLUME: ${DB_CONTAINER_VOLUME}
          USER_GROUP: ${USER_GROUP}
    container_name: db_app
    restart: unless-stopped
    shm_size: 128mb
    ports:
     - "${DB_EXTERNAL_PORT}:5432"
    volumes:
      - "${DB_CONTAINER_VOLUME}/data:/var/lib/postgresql/data:rw"
      - "${DB_CONTAINER_VOLUME}/conf:/etc/postgresql/conf.d:ro"
      - "${DB_CONTAINER_VOLUME}/scripts:/docker-entrypoint-initdb.d:ro"
      - "${DB_CONTAINER_VOLUME}/assets:/assets:ro"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
      - DB_PASSWORD=/run/secrets/db_password
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_EXTERNAL_PORT=${DB_EXTERNAL_PORT}
      - SERVICE_TAGS=v1.0.0
      - SERVICE_NAME=db_app_postgres
    secrets:
      - postgres-passwd
      - db_password
    networks:
      draft_network:
        aliases:
          - db_app
  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_EXTERNAL_PORT}:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db_app
    networks:
      draft_network:
        aliases:
          - adminer
  # web_app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.apache-bullseye
  #   container_name: web_app
  #   restart: unless-stopped
  #   ports:
  #     - "${WEB_EXTERNAL_PORT}:80"
  #   volumes:
  #     - "${WEB_CONTAINER_VOLUME}:/var/www/html:rw"
  #   environment:
  #     environment:
  #     DB_USER: /run/secrets/db_user
  #     DB_PASSWORD: /run/secrets/db_password
  #     DB_NAME: "${DB_NAME}"
  #     DB_HOST: "${DB_HOST}"
  #     WEB_EXTERNAL_PORT: "${WEB_EXTERNAL_PORT}"
  #     SERVICE_TAGS: "v1.0.0"
  #     SERVICE_NAME: web_app
  #   secrets:
  #     - db_user
  #     - db_password
  #   depends_on:
  #     - db_app
  #   networks:
  #     draft_network:
  #       aliases:
  #         - web_app

volumes:
  docker: {}
secrets:
  postgres-passwd:
    file: ./secrets/postgres-passwd
  db_password:
    file: ./secrets/db_password
networks:
  draft_network:
    name: safereturn_network
    driver: bridge
    ipam:
      driver: default