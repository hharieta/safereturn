
services:
  db-safe-service:
    build:
       context: .
       dockerfile: Dockerfile.postgres
       args:
          DB_USER: ${DB_USER}
          DB_NAME: ${DB_NAME}
          DB_HOST: ${DB_HOST}
          DB_PORT: ${DB_PORT}
          DB_VOLUME: ${DB_VOLUME}
          USER_GROUP: ${USER_GROUP}
    image: db-${PROJECT_NAME}:v1.0.0
    container_name: db-${PROJECT_NAME}-service
    restart: unless-stopped
    shm_size: 128mb
    ports:
     - "${DB_PORT}:5432"
    volumes:
      - "${DB_VOLUME}/data:/var/lib/postgresql/data:rw"
      - "${DB_VOLUME}/conf:/etc/postgresql/conf.d:ro"
      - "${DB_VOLUME}/scripts:/docker-entrypoint-initdb.d:ro"
      - "${DB_VOLUME}/assets:/assets:ro"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-passwd
      - DB_PASSWORD=/run/secrets/db_password
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - SERVICE_TAGS=v1.0.0
      - SERVICE_NAME=db-service
    secrets:
      - postgres-passwd
      - db_password
    networks:
      draft_network:
        aliases:
          - db-safe-service
  adminer-safe-service:
    image: adminer
    container_name: adminer-${PROJECT_NAME}-service
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT}:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db-service
    networks:
      draft_network:
        aliases:
          - adminer
  redis-safe-service:
    build:
      context: .
      dockerfile: Dockerfile.redis
      args:
        REDIS_PORT: ${REDIS_PORT}
    container_name: redis-${PROJECT_NAME}-service
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - "${REDIS_VOLUME}/data:/data:rw"
      - "${REDIS_VOLUME}/conf:/usr/local/etc/redis:ro"
    environment:
      REDIS_PORT: "${REDIS_PORT}"
      SERVICE_TAGS: "v1.0.0"
      SERVICE_NAME: redis-service
    networks:
      draft_network:
        aliases:
          - redis
  nest-safe-service:
    build:
      context: .
      dockerfile: Dockerfile.node
      args:
        NODE_PORT: ${NODE_PORT}
        DB_USER: ${DB_USER}
        DB_NAME: ${DB_NAME}
        DB_HOST: ${DB_HOST}
    image: nest-${PROJECT_NAME}:v1.0.0
    container_name: nest-${PROJECT_NAME}-service
    restart: unless-stopped
    ports:
      - "${NODE_PORT}:3000"
    volumes:
      - "${NODE_VOLUME}:/home/nodeuser/app:rw"
    environment:
      DB_USER: /run/secrets/db_user
      DB_PASSWORD: /run/secrets/db_password
      DB_NAME: "${DB_NAME}"
      DB_HOST: "${DB_HOST}"
      NODE_PORT: "${NODE_PORT}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_HOST: "${REDIS_HOST}"
      SERVICE_TAGS: "v1.0.0"
      SERVICE_NAME: nest-safe-service
    secrets:
      - db_password
    depends_on:
      - db-safe-service
    networks:
      draft_network:
        aliases:
          - nest-safe-service

volumes:
  docker: {}
secrets:
  postgres-passwd:
    file: ./secrets/postgres-passwd
  db_password:
    file: ./secrets/db_password
networks:
  draft_network:
    name: safereturn_network
    driver: bridge
    ipam:
      driver: default